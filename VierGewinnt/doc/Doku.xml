<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VierGewinnt</name>
    </assembly>
    <members>
        <member name="F:VierGewinnt.Form1.iSpielfeldHeightMax">
            Maximal einstellbare Spielfeldbreite
        </member>
        <member name="F:VierGewinnt.Form1.iXstartMin">
            Maximal einstellbare Spielfeldhöhe
        </member>
        <member name="F:VierGewinnt.Form1.iYstartMin">
            Maximale startposition x des spielfeldes
        </member>
        <member name="F:VierGewinnt.Form1.iXstart">
            Maximale startposition y des spielfeldes
        </member>
        <member name="F:VierGewinnt.Form1.iYstart">
            aktuelle startposition X (damit es immer rechts ausgerichtet ist)
        </member>
        <member name="F:VierGewinnt.Form1.iSpielfeldFormat">
            aktuelle startposition Y (damit es immer unten ausgerichtet ist)
        </member>
        <member name="F:VierGewinnt.Form1.Spielfeldframe">
            die festgelegte größe der spielfeldKacheln
        </member>
        <member name="M:VierGewinnt.Form1.AllocConsole">
            <summary>
            Erlaubt Uns Zum Form eine console zu starten
            </summary>
        </member>
        <member name="M:VierGewinnt.Form1.EckenBerechnen(System.Int32,System.Int32)">
            <summary>
            Diese Funktion Berechnet die Eckpunkte für ein Quadrat und speichert sie in dem Array Dreieckspunkte
            </summary>
            <param name="iWidth">Die Breite des Spielfeldes </param>
            <param name="iHeight">Die Höhe des Spielfeldes </param>
        </member>
        <member name="M:VierGewinnt.Form1.SpielfeldTileZeichnen(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Zeichnet eine Spielfeldkachel für die angegebenen Parameter
            </summary>
            <param name="iX">X koordiante am oberen Rand in Pixeln</param>
            <param name="iY">Y koordiante am linken Rand in Pixeln</param>
            <param name="iWidth">Die Breite der Kachel</param>
            <param name="iHeight">Die Breite der Kachel</param>
        </member>
        <member name="M:VierGewinnt.Form1.SpielfeldZeichnen">
            <summary>
            Zeichnet die Gesamte Spielfeld vorschau
            </summary>
        </member>
        <member name="F:VierGewinnt.Form1.components">
            <summary>
             Required designer variable.
            </summary>
        </member>
        <member name="M:VierGewinnt.Form1.Dispose(System.Boolean)">
            <summary>
             Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:VierGewinnt.Form1.InitializeComponent">
            <summary>
             Required method for Designer support - do not modify
             the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:VierGewinnt.Form2.AllocConsole">
            <summary>
            Erlaubt Uns Zum Form eine console zu starten
            </summary>
        </member>
        <member name="M:VierGewinnt.Form2.EckenBerechnen(System.Int32,System.Int32)">
            <summary>
            Diese Funktion Berechnet die Eckpunkte für ein Quadrat und speichert sie in dem Array Dreieckspunkte
            </summary>
            <param name="iWidth">Die Breite des Spielfeldes </param>
            <param name="iHeight">Die Breite des Spielfeldes </param>
        </member>
        <member name="M:VierGewinnt.Form2.Hovereffekt(System.Int32)">
            <summary>
            Zeichnet einen Kreis über der Entsprechenden Zeile
            </summary>
            <param name="iSpalte">Die entsprechende spalte -1 heist, dass der Kreis auf keiner Zeile gedrawt werden soll</param>
        </member>
        <member name="M:VierGewinnt.Form2.KreisDrehen(System.Drawing.Point[],System.Int32)">
            <summary>
            lässt die Kreise mit den Entsprechenden Koordinaten eine bestimmte anzahl oft Drehen. Wird für die Gewinn Animation verwendet
            </summary>
            <param name="KreisKoordinaten">die Koordinaten der Kreise, die Gedreht werden sollen, auf dem Spielfeld</param>
            <param name="iDrehungen">Die Anzahl der Drehungen</param>
        </member>
        <member name="M:VierGewinnt.Form2.SpielfeldErstellen">
            <summary>
            erstellt das Spielfeld mit pixelkoordinaten anhand der Spielfeldgröße zeichent dieses jedoch noch nicht.
            </summary>
        </member>
        <member name="M:VierGewinnt.Form2.SpielfeldTileZeichnen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
            <summary>
            Zeichnet eine Spielfeldkachel für die angegebenen Parameter
            </summary>
            <param name="iX">X koordiante am oberen Rand in Pixeln</param>
            <param name="iY">Y koordiante am linken Rand in Pixeln</param>
            <param name="iWidth">Die Breite der Kachel</param>
            <param name="iHeight">Die Breite der Kachel</param>
            <param name="G">Graphic object auf das Gezeichnet werden soll</param>
        </member>
        <member name="M:VierGewinnt.Form2.SpielfeldZeichnen(System.Drawing.Graphics)">
            <summary>
            Zeichnet das Spielfeld anhand des Structs Spielfelder
            </summary>
            <param name="G">Graphic object auf das Gezeichnet werden soll</param>
        </member>
        <member name="M:VierGewinnt.Form2.SpielsteineZeichnen(System.Drawing.Graphics,System.Int32)">
            <summary>
            Zeichnet die Bereits gelegten Spielsteine anhand des Structs Spielfelder.
            </summary>
            <param name="G">Graphic object auf das Gezeichnet werden soll</param>
            <param name="iStartY"> die Obersten Y koordinaten. Normal 0 zum Steine gleichzeitig fallen lassen erhöhen.</param>
        </member>
        <member name="F:VierGewinnt.Form2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:VierGewinnt.Form2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:VierGewinnt.Form2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:VierGewinnt.Form3.AllocConsole">
            <summary>
            Erlaubt Uns Zum Form eine console zu starten
            </summary>
        </member>
        <member name="F:VierGewinnt.Form3.EmpfangenSignal">
            <summary>
            Signaliseirt Den Task/Threads ob was Empfangen wurde damit sie nicht mehr wartenüssen
            </summary>
        </member>
        <member name="F:VierGewinnt.Form3.MeinZugSignal">
            <summary>
            Mein Zug Signalisert wann Der Eigene Zug Zuendet ist undnicht mehr darauf gewartet werden muss Das man sein zug macht
            </summary>
        </member>
        <member name="M:VierGewinnt.Form3.#ctor">
             <summary>
              Beim Inizialisieren Von Form 3
            
                 Array Von Endpoinst Difiniert Die Bei Der Suche Nach Diesen Gefüllt wird Momentan wird davon ausgegangen das im gleichen Netztwerk nicht mehr als 10 sind
            
                 Window Pratmeter wie
                     Window state
                     maximise box -> ob man das Fenster vergrößern kann
            
                 die Größe Der Pixel Von den Federn X und Y
            
                 Die Bitmap Frame Wird Definiert
            
                 Die Bitmap Wird mit der Hintergrund farbe gefüllt
            
                 Das Switch Case Legt Die Gewinnummer Fest Auf Der Bsis Was man In Form1 Eingegeben hat
                 Der Default ist 4
                 Eher Ein Easter Egg da es nicht gesagt wird das Man Die Gewinnummer Änder kann
            
                 Am Ende Wird nach der Inizialisertung Noch die Ip Des Pc abgefragt und angezeigt
                 Es Wird immer Die erste IP genommen auch wenn er mehr findet nimmt er immer die erste
            
             </summary>
        </member>
        <member name="M:VierGewinnt.Form3.MeineIP">
            <summary>
            Zeig Die Erste ip von einem selbst an
            </summary>
        </member>
        <member name="M:VierGewinnt.Form3.SpielerWählen">
            <summary>
            zufällige farbewählen die dann als erste eine spielzug macht
            </summary>
        </member>
        <member name="M:VierGewinnt.Form3.SpielFelInizialisieren">
            <summary>
            Wird aufgerufen vom server bevor der die daten Sendet und vom Client nachtdem er alle Daten bekommen hat
            Es Fängt dann an das spielfeld zu zeichn
            </summary>
        </member>
        <member name="M:VierGewinnt.Form3.OnClosed(System.EventArgs)">
             <summary>
             Wenn Man Das Fenster Schliest Sorgt dies Dafür das Alles geschlossen wird auch wenn noch die suche läuft oder ein Task/Thread hintergrund wartet und diese auch beendet werden
             Es wird eine message box Angezeigt die sagt das Das Programm beendet wurde
            
             </summary>
        </member>
        <member name="M:VierGewinnt.Form3.btn_Suchen_Click(System.Object,System.EventArgs)">
            <summary>
            Startet den Background worker der dann nach Offenen Ports Im Lokalen Netzwerk sucht
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:VierGewinnt.Form3.ServerHosten_Click(System.Object,System.EventArgs)">
            <summary>
            Startet bei Einem Den Listening prozess der Darauf wartet das sich jemand
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:VierGewinnt.Form3.backgroundWorker1_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Startet den such prozess als BackgroundWorker im Hintergrund
            </summary>
            <param name="sender"> sender Objekt Vom aufrufer</param>
            <param name="e"> DoWorkEventArgs um die Events zu verarbeiten wird nur für Cancel Genutzt</param>
        </member>
        <member name="M:VierGewinnt.Form3.backgroundWorker1_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Wird Vom BackgroundWorker nach beendigung aufgerufen
            sotiert nach Canceled
            Error wenn ein Fehler Passiert ist
            Normaler Durchlauf Hier nach werden die Ergebnise in der LiB_GefundenenEndPoints Aufgelistet
            </summary>
            <param name="sender">sender Objekt Vom aufrufer</param>
            <param name="e"> die RunWorkerCompletedEventArgs die dann den beendigungs grund mitliefern </param>
        </member>
        <member name="M:VierGewinnt.Form3.ConnectionSuchen(System.ComponentModel.BackgroundWorker)">
            <summary>
            Wird vom BackgroundWorker aufgerufen um nach den Endpoints zu sichen
            </summary>
            <param name="bw"> der BackgroundWorker wird übergeben um zu wissen welcher status er hat und Den prozess vortschritt zurück zu geben</param>
        </member>
        <member name="M:VierGewinnt.Form3.StartListening(System.String)">
            <summary>
            Startet Ein Listening Prozzess um daten entegen zu nehmen
            Encodeing und Decoding Leuft gleich Über UTF8 es muss der zu sendende oder empfangende vorher nicht geändert werden
            </summary>
            <param name="Senden">Es wird Ein String Übergeben der nach den empfangen von etwas zurück gesendet wird</param>
            <returns>Gibt das empfangenen als string zurück</returns>
        </member>
        <member name="M:VierGewinnt.Form3.StartClient(System.String)">
            <summary>
            Startet Einen Client der daten an einen Server sendet der am lauschen ist
            Encodeing und Decoding Leuft Über UTF8  es muss der zu sendende oder empfangende vorher nicht geändert werden
            </summary>
            <param name="Senden">der zu sendende string</param>
            <returns>Gibt zürück was es von server als antwort auf das erhaltenn von den daten bekommt</returns>
        </member>
        <member name="F:VierGewinnt.Form3.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:VierGewinnt.Form3.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:VierGewinnt.Form3.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:VierGewinnt.Program.Main">
            <summary>
             The main entry point for the application.
            </summary>
        </member>
        <member name="T:VierGewinnt.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:VierGewinnt.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:VierGewinnt.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
    </members>
</doc>
